setwd("C:/Users/ReinaldKim/Desktop/Coursera/Data Science/PML - Course Project")
dataset <- read.csv("pml-training.csv", as.is=TRUE, na.strings=c('', NA))
dataset <- dataset[, colSums(is.na(dataset)) == 0]
columns(dataset)
cols(dataset)
columns
colnames(dataset)
summary(dataset)
data = dataset[-c(1,2,5,6)]
summary(data)
library(caret)
pairs(data)
grid.arrange(
ggplot(data, aes(x=accel_arm_z, y=yaw_belt, colour=classe)) + geom_point(),
ggplot(data, aes(x=pitch_dumbbell, y=total_accel_belt, colour=classe)) + geom_point(),
ggplot(data, aes(x=total_accel_arm, y=yaw_forearm, colour=classe)) + geom_point(),
ggplot(data, aes(x=roll_arm, y=total_accel_forearm, colour=classe)) + geom_point(),
ncol=2
)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(
ggplot(data, aes(x=accel_arm_z, y=yaw_belt, colour=classe)) + geom_point(),
ggplot(data, aes(x=pitch_dumbbell, y=total_accel_belt, colour=classe)) + geom_point(),
ggplot(data, aes(x=total_accel_arm, y=yaw_forearm, colour=classe)) + geom_point(),
ggplot(data, aes(x=roll_arm, y=total_accel_forearm, colour=classe)) + geom_point(),
ncol=2
)
data$classe <- factor(data$classe)
folds <- createFolds(data$classe, k=10, list=TRUE, returnTrain=FALSE)
for(i in 1:10) {}
for(i in 1:10) {
fold <- folds[[i]]
rf <- train(classe ~ ., method='rf', data=data[-fold, ])
asdasda}
models <- list()
models
models[1] <- 1
models
models[2] <- 3
models
models <- list()
for(i in 1:10) {
fold <- folds[[i]]
rf <- train(classe ~ ., method='rf', data=data[-fold, ])
prediction <- predict(rf, data[fold, ])
accuracy <- confusionMatrix(prediction, data[fold, ]$classe)
models[i] <- list(rf, prediction, accuracy)
}
?randomForest
for(i in 1:10) {
fold <- folds[[i]]
rf <- train(classe ~ ., method='rf', data=data[-fold, ])
prediction <- predict(rf, data[fold, ])
accuracy <- confusionMatrix(prediction, data[fold, ]$classe)
models[i] <- list(rf, prediction, accuracy)
}
summary(lm(classe ~ ., data=data))
?oneR
??oneR
?information.gain
install.packages("FSelector")
random.forest.importance(classe ~ ., data, importance.type = 1)
library(FSelector)
random.forest.importance(classe ~ ., data, importance.type = 1)
for(i in 1:10) {
fold <- folds[[i]]
rf <- randomForest(classe ~ ., data=data[-fold, ])
prediction <- predict(rf, data[fold, ])
accuracy <- confusionMatrix(prediction, data[fold, ]$classe)
models[i] <- list(rf, prediction, accuracy)
}
for(i in 1:10) {
fold <- folds[[i]]
rf <- randomForest(classe ~ ., data=data[-fold, ])
prediction <- predict(rf, data[fold, ])
accuracy <- confusionMatrix(prediction, data[fold, ]$classe)$overall[[1]]
models[i] <- list(rf, prediction, accuracy)
accuracy
}
models
models[1]
models = list()
preds = list()
accs = list()
install.packages("doParallel")
library(doParallel)
registerDoParallel(cores=detectCores())
for(i in 1:10) {
fold <- folds[[i]]
rf <- randomForest(classe ~ ., data=data[-fold, ])
prediction <- predict(rf, data[fold, ])
accuracy <- confusionMatrix(prediction, data[fold, ]$classe)$overall[[1]]
models[i] <- rf
preds[i] <- prediction
accs[i] <- accuracy
accuracy
}
warnings()
models
preds
accuracy
accs
test <- read.csv("pml-testing.csv", as.is=TRUE, na.strings=c('', NA))
test <- test[, colSums(is.na(test)) == 0]
test <- test[-c(1,2,5,6)]
dims(data)
dims(test)
dim(test)
x = predict(models[[3]], test)
x = predict(models[3], test)
models[3]
predict(models[3])
x <- list()
fold <- folds[[3]]
rf <- randomForest(classe ~ ., data=data[-fold, ])
x <- predict(rf, test)
rf <- randomForest(classe ~ ., data=data[-folds[[4]], ])
y <- predict(rf, test)
x
y
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(x)
rf
savehistory("C:/Users/ReinaldKim/Desktop/Coursera/Data Science/PML - Course Project/hist.Rhistory")
